import { Box as MantineBox } from '@mantine/core'
import * as React from 'react'
import { forwardRef } from 'react'
const IconChatRobot = (props, ref) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth="1.5"
      ref={ref}
      {...props}
    >
      <path
        fill="currentColor"
        d="M15.5508 6.39844L15.7016 7.13312L15.5508 6.39844ZM17.3148 5.40786L17.7833 5.99351L17.3148 5.40786ZM16.3125 6.13124L16.6537 6.79912L16.3125 6.13124ZM20.8908 3.18807L20.3046 3.65596V3.65596L20.8908 3.18807ZM19.7002 3.49949L19.2317 2.91384V2.91384L19.7002 3.49949ZM20.4995 3L20.4986 2.25L20.4995 3ZM3.32698 8.09772L2.65873 7.75722L3.32698 8.09772ZM4.63803 6.78667L4.29754 6.11841L4.63803 6.78667ZM4.63803 21.1327L4.29754 21.801L4.63803 21.1327ZM3.32698 19.8217L2.65873 20.1622L3.32698 19.8217ZM19.362 21.1327L19.7025 21.801L19.362 21.1327ZM20.673 19.8217L21.3413 20.1622L20.673 19.8217ZM8.75 13C8.75 12.5858 8.41421 12.25 8 12.25C7.58579 12.25 7.25 12.5858 7.25 13H8.75ZM7.25 15C7.25 15.4142 7.58579 15.75 8 15.75C8.41421 15.75 8.75 15.4142 8.75 15H7.25ZM15.75 13C15.75 12.5858 15.4142 12.25 15 12.25C14.5858 12.25 14.25 12.5858 14.25 13H15.75ZM14.25 15C14.25 15.4142 14.5858 15.75 15 15.75C15.4142 15.75 15.75 15.4142 15.75 15H14.25ZM16.2 20.7097H7.8V22.2097H16.2V20.7097ZM3.75 16.6597V11.2597H2.25V16.6597H3.75ZM20.25 4.12419V16.6597H21.75V4.12419H20.25ZM7.8 7.20969H14.3163V5.70969H7.8V7.20969ZM17.7833 5.99351L20.1688 4.08514L19.2317 2.91384L16.8463 4.82221L17.7833 5.99351ZM14.3163 7.20969C14.9103 7.20969 15.3113 7.21323 15.7016 7.13312L15.4 5.66375C15.1934 5.70615 14.9703 5.70969 14.3163 5.70969V7.20969ZM16.8463 4.82221C16.3355 5.23082 16.1591 5.3674 15.9713 5.46335L16.6537 6.79912C17.0085 6.61785 17.3195 6.36458 17.7833 5.99351L16.8463 4.82221ZM15.7016 7.13312C16.0326 7.06519 16.3528 6.95284 16.6537 6.79912L15.9713 5.46335C15.7908 5.55558 15.5986 5.62299 15.4 5.66375L15.7016 7.13312ZM21.75 4.12419C21.75 3.87272 21.7507 3.63216 21.7333 3.43978C21.7171 3.26124 21.6763 2.96999 21.4769 2.72019L20.3046 3.65596C20.2561 3.5952 20.2385 3.54268 20.234 3.52757C20.2306 3.51582 20.2349 3.52582 20.2394 3.57547C20.2493 3.68373 20.25 3.84281 20.25 4.12419H21.75ZM20.1688 4.08514C20.3885 3.90937 20.5132 3.81057 20.6038 3.75062C20.6454 3.72313 20.6559 3.72024 20.6446 3.7249C20.6301 3.73089 20.578 3.74992 20.5003 3.75L20.4986 2.25C20.179 2.25035 19.9262 2.40049 19.7766 2.49936C19.6155 2.60589 19.4281 2.75675 19.2317 2.91384L20.1688 4.08514ZM21.4769 2.72019C21.2394 2.42267 20.8793 2.24959 20.4986 2.25L20.5003 3.75C20.4241 3.75008 20.3521 3.71547 20.3046 3.65596L21.4769 2.72019ZM3.75 11.2597C3.75 10.4072 3.75058 9.813 3.78838 9.35037C3.82546 8.89649 3.8946 8.63573 3.99524 8.43821L2.65873 7.75722C2.43239 8.20144 2.33803 8.68158 2.29336 9.22822C2.24942 9.7661 2.25 10.432 2.25 11.2597H3.75ZM7.8 5.70969C6.9723 5.70969 6.30641 5.70911 5.76853 5.75305C5.2219 5.79771 4.74175 5.89207 4.29754 6.11841L4.97852 7.45492C5.17604 7.35428 5.4368 7.28515 5.89068 7.24807C6.35331 7.21027 6.94755 7.20969 7.8 7.20969V5.70969ZM3.99524 8.43821C4.21095 8.01485 4.55516 7.67064 4.97852 7.45492L4.29754 6.11841C3.59193 6.47794 3.01825 7.05162 2.65873 7.75722L3.99524 8.43821ZM7.8 20.7097C6.94755 20.7097 6.35331 20.7091 5.89068 20.6713C5.4368 20.6342 5.17604 20.5651 4.97852 20.4645L4.29754 21.801C4.74175 22.0273 5.22189 22.1217 5.76853 22.1663C6.30641 22.2103 6.9723 22.2097 7.8 22.2097V20.7097ZM2.25 16.6597C2.25 17.4874 2.24942 18.1533 2.29336 18.6912C2.33803 19.2378 2.43239 19.7179 2.65873 20.1622L3.99524 19.4812C3.8946 19.2836 3.82546 19.0229 3.78838 18.569C3.75058 18.1064 3.75 17.5121 3.75 16.6597H2.25ZM4.97852 20.4645C4.55516 20.2487 4.21095 19.9045 3.99524 19.4812L2.65873 20.1622C3.01825 20.8678 3.59193 21.4414 4.29754 21.801L4.97852 20.4645ZM16.2 22.2097C17.0277 22.2097 17.6936 22.2103 18.2315 22.1663C18.7781 22.1217 19.2582 22.0273 19.7025 21.801L19.0215 20.4645C18.824 20.5651 18.5632 20.6342 18.1093 20.6713C17.6467 20.7091 17.0525 20.7097 16.2 20.7097V22.2097ZM20.25 16.6597C20.25 17.5121 20.2494 18.1064 20.2116 18.569C20.1745 19.0229 20.1054 19.2836 20.0048 19.4812L21.3413 20.1622C21.5676 19.7179 21.662 19.2378 21.7066 18.6912C21.7506 18.1533 21.75 17.4874 21.75 16.6597H20.25ZM19.7025 21.801C20.4081 21.4414 20.9817 20.8678 21.3413 20.1622L20.0048 19.4812C19.789 19.9045 19.4448 20.2487 19.0215 20.4645L19.7025 21.801ZM7.25 13V15H8.75V13H7.25ZM14.25 13V15H15.75V13H14.25Z"
        strokeWidth="inherit"
        stroke="currentColor"
      />
    </svg>
  )
}
const ForwardRef = forwardRef(IconChatRobot)
const ChatRobot = forwardRef((props, ref) => {
  if (typeof props.size === 'number') {
    const { size, ...rest } = props
    props = {
      ...rest,
      w: size,
      h: size
    }
  }
  return (
    <MantineBox
      ref={ref}
      {...props}
      component={ForwardRef}
      className={[props.className, 'tiui-icon', 'ChatRobot'].join(' ')}
    />
  )
})
ChatRobot.displayName = 'IconChatRobot'
export default ChatRobot
